name: Pipeline

on:
  workflow_dispatch:
  push: {}

permissions:
  id-token: write
  contents: read
  attestations: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, arm64]
        os: [darwin, linux]

    steps:
    - name: Check out Git repository
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version-file: 'go.mod'

    - name: Build
      run: |
        env GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -v -o ./ ./...
        mv flashpipe flashpipe-${{ matrix.os }}-${{ matrix.arch }}


    - uses: actions/upload-artifact@v4
      with:
        name: flashpipe-${{ matrix.os }}-${{ matrix.arch }}
        path: flashpipe-${{ matrix.os }}-${{ matrix.arch }}

  attest:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: flashpipe-linux-amd64
          path: ./
      - uses: actions/download-artifact@v4
        with:
          name: flashpipe-linux-arm64
          path: ./
      - uses: actions/download-artifact@v4
        with:
          name: flashpipe-darwin-amd64
          path: ./
      - uses: actions/download-artifact@v4
        with:
          name: flashpipe-darwin-arm64
          path: ./

      - run: |
          echo Hello world

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-path: flashpipe-*-*
